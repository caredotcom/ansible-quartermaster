#!/usr/bin/env python

""" aq

 A fairly simple wrapper around the ansible_quartermaster module.

 :copyright: (c) 2016, Care.com
 :license: MIT License, see LICENSE for more details

"""

import argparse
import os
import json
import sys
import ansible_quartermaster as aq

### Functions

## parse_arguments
#
# Expect one required argument, which must be --list, --groups, or --host
# <hostname>, and optionally one additional argument --yamldir.

def parse_arguments():

  parser = argparse.ArgumentParser(description="Ansible dynamic inventory script for Care.com YAML static inventory file.")

  group = parser.add_mutually_exclusive_group(required=True)
  group.add_argument('--list',
                     help='List groups (and hosts within them) and vars',
                     action='store_true')
  group.add_argument('--groups',
                     help='List groups (and hosts within them), but NOT vars',
                     action='store_true')
  group.add_argument('--group',
                     help='List one specific group (and hosts within it), but NOT vars')
  group.add_argument('--host',
                     help='List details about the specific host')

  parser.add_argument('--yamldir',
                      help="Specify the YAML inventory directory.")

  parser.add_argument('--ignore-not-ready-hosts',
                      help="Ignore hosts that aren't 'ready'.",
                      action='store_true')

  return parser.parse_args()

### Main body

# Parse our arguments.

args = parse_arguments()

# Build up a list of YAML files to process. First all of the the .yaml
# files in the inventory directory; use the --yamldir argument if one was
# given, or a directory "inventory.d" in the same directory as this script
# by default.

if args.yamldir:
  yamldir = os.path.expanduser(args.yamldir).rstrip("/")
else:
  yamldir = "{0}/inventory.d".format(os.path.dirname(sys.argv[0]))

# Fetch the entire inventory from the ansible_quartermaster module
inventory = aq.fetch_inventory(yamldir, args.ignore_not_ready_hosts)

# If called with --list, just print the inventory

if args.list:
  print json.dumps(inventory, sys.stdout, indent=2, sort_keys=True)
  sys.exit(0)

# If called with --groups, fetch just the groups and then print it.

if args.groups:
  groupdict = aq.groups(inventory)
  print json.dumps(groupdict, sys.stdout, indent=2, sort_keys=True)
  sys.exit(0)

# If called with --group then fetch the group and then print it.
if args.group:
  group = aq.group(inventory, args.group)
  print json.dumps(group, sys.stdout, indent=2, sort_keys=True)
  sys.exit(0)

# If called with --host, print inventory variables for the specified host.

if args.host:
  host = aq.host(inventory, args.host)
  print json.dumps(host, sys.stdout, indent=2, sort_keys=True)
  sys.exit(0)

